# 수업 시작 시간과 끝 시간이 주어졌을 때
# 모든 수업이 가능한 최소 강의실의 수를 구하는 문제
# 모든 수업을 하기 위해서는 겹치는 수만큼의 강의실이 필요
# 먼저 시작한 수업이 끝날 때까지 겹치는 수업을 체크
# 무조건 겹치는 시간만 고려하면 안되고 겹치면서 먼저 끝난 수업에 대한 것도 고려해야함
# 예를 들어 [(1,10),(2,5),(5,10)] 의 경우 강의실이 2개면 된다.
# 우선순위 큐를 활용하여
# 겹치면 강의실이 필요한 수업을 추가하고 
# 겹치지 않으면 강의실을 다음수업과 교체하는 방식으로
# 최소 강의실 수를 구할 수 있음

from heapq import heappop, heappush
import sys
input = sys.stdin.readline

n = int(input())
t = [list(map(int, input().split())) for _ in range(n)]
t.sort()
# 수업의 끝나는 시간 담을 큐
q = []
# 첫 수업이 끝나는 시간 입력
heappush(q,t[0][1])

# 수업을 하나씩 확인
for i in range(1,n):
    # 가장 빨리 끝나는 수업의 끝나는 시간보다 
    # 현재 수업의 시작 시간이 이르다면 현재 수업의 끝나는 시간 추가
    if t[i][0] < q[0]:
        heappush(q,t[i][1])
    # 현재 수업이 가장 빨리 끝나는 수업이 끝나고 시작한다면
    # 끝나는 수업을 빼내고 현재수업의 끝나는 시간 넣음
    else:
        heappop(q)
        heappush(q,t[i][1])

# 최고로 많이 겹친만큼의 수업이 q에 남아 있게 됨
print(len(q))