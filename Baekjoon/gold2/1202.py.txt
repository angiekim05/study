import heapq
import sys
input = sys.stdin.readline

# 보석 개수, 가방 개수
n,k = map(int,input().split()) 
# 보석을 무거운 순으로 (내림차순) 가격가 작은 순으로 (오름차순) 정렬
jewels = [list(map(int, input().split())) for _ in range(n)]
jewels.sort(key = lambda x: (-x[0],x[1]))
# 가방을 오름차순으로 정렬
bags = [int(input()) for _ in range(k)]
bags.sort()

# 임시로 보석의 가격을 담을 q
q = []
# 가방에 담긴 보석의 가격을 담을 answer
answer = 0

# 가방을 하나씩 방문하면서 가방에 들어갈 수 있는 보석의 가격을 q에 담고,
# q에 들어간 보석 가격이 큰 것부터 꺼내 answer에 더한다.
# 가방의 크기가 작은 것부터 보석이 담길 수 있는지 확인했기 때문에
# q에 담겨있는 보석은 모두 현재 가방에 담길 수 있는 보석이다.
# 따라서 가장 큰 가격의 보석을 answer에 더하면 되는 것이다.
for b in bags:
    while jewels and b >= jewels[-1][0]:
        w,v = jewels.pop()
        heapq.heappush(q,-v)
    if q:
        answer += -heapq.heappop(q)
print(answer)